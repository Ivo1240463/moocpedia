@page "/authentication/{action}"

@using MOOCPediaApp.Features.Shared
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Security.Claims

@inject NavigationManager _nav
@inject AuthenticationStateProvider _auth
@inject IJSRuntime _js

<RemoteAuthenticatorView Action="@Action" OnLogInSucceeded="FlagLoginAsync">
    <LogOut>
        @{
            var authority = "https://dev-gh7hfiov68zh1phc.us.auth0.com";
            var clientId = "lMXkjd6tnOn4T51wFk7giyf4qQDHA5U7";

            _nav.NavigateTo($"{authority}/v2/logout?client_id={clientId}");
        }
    </LogOut>

    <LoggingIn>
        <LoadingOverlayC IsVisible="@_isLoading" />
    </LoggingIn>
</RemoteAuthenticatorView>

@code {
    #region Parameters
    [Parameter]
    public string Action { get; set; } = "";
    #endregion

    #region Data
    private bool _isLoading = true;
    #endregion

    #region Functions
    private async Task FlagLoginAsync()
    {
        var authState = await _auth.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity?.IsAuthenticated ?? false)
            _nav.NavigateTo("", true);
    }
    #endregion
}
